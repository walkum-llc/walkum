{"version":3,"file":"f8f934da1175da2072d774401cf2b41f5e84b91c-ec3b80405007919b1177.js","mappings":"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","sources":["webpack://walkum/./src/components/links/headerLink.module.css","webpack://walkum/./src/components/links/modularHeaderLink.js","webpack://walkum/./src/components/merchant/QuantityControl.js","webpack://walkum/./src/components/merchant/styles.module.css","webpack://walkum/./src/components/merchant/storeItems/Item.js","webpack://walkum/./src/components/merchant/storeItems/Section.js","webpack://walkum/./src/components/merchant/storeItems/Category.js","webpack://walkum/./src/components/merchant/storeItems/index.js","webpack://walkum/./src/components/merchant/checkout/usePaypalButtons.js","webpack://walkum/./src/components/merchant/checkout/index.js","webpack://walkum/./src/components/merchant/cart.js","webpack://walkum/./src/components/merchant/storeItems/ItemModal.js","webpack://walkum/./src/components/merchant/storeItems/styles.module.css","webpack://walkum/./src/components/merchant/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var blink = \"headerLink-module--blink--bdfec\";\nexport var blinkingCursor = \"headerLink-module--blinkingCursor--59495\";\nexport var phraseContainer = \"headerLink-module--phraseContainer--9d1b4\";\nexport var responsiveSvg = \"headerLink-module--responsiveSvg--e821b\";\nexport var svgButton = \"headerLink-module--svgButton--d9016\";","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Link } from \"gatsby\";\nimport * as styles from \"./headerLink.module.css\";\n\nconst ModularHeaderLink = ({ leftWord = \"walkum\", leftLinkTo=\"/\", rightWord, rightLinkTo=\".\", cursorColor = \"#FFD700\" }) => {\n    const [blinkSpeed, setBlinkSpeed] = useState(getRandomBlinkSpeed());\n    const accountInfo = useSelector((state) => state.account.accountInfo);\n\n    // Function to generate a random blink speed between 1s and 3s\n    function getRandomBlinkSpeed() {\n        return Math.random() * (3000 - 1000) + 1000; // Random value between 1000ms and 3000ms\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setBlinkSpeed(getRandomBlinkSpeed()); // Update blink speed every 5 seconds\n        }, 5000);\n\n        return () => clearInterval(interval); // Cleanup on unmount\n    }, []);\n\n    if (!accountInfo) {\n        return null;\n    }\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div className={styles.phraseContainer}>\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 1200 300\"\n                    width=\"100%\"\n                    height=\"auto\"\n                    className={styles.responsiveSvg}\n                >\n                    <g transform=\"translate(600, 150)\" textAnchor=\"middle\">\n                        {/* Left Word */}\n                        <Link to={leftLinkTo}>\n                            <text\n                                x=\"-300\"\n                                fill=\"white\"\n                                fontFamily=\"Courier\"\n                                fontSize=\"90px\"\n                                className={styles.svgButton}\n                            >\n                                {leftWord}\n                            </text>\n                        </Link>\n\n                        {/* Blinking Cursor */}\n                        <text\n                            x=\"0\"\n                            fill={cursorColor}\n                            fontFamily=\"Courier\"\n                            fontSize=\"90px\"\n                            fontWeight=\"bold\"\n                            className={styles.blinkingCursor}\n                            style={{\n                                animationDuration: `${blinkSpeed}ms`,\n                                transform: \"scale(5, 5)\",\n                            }}\n                        >\n                            |\n                        </text>\n\n                        {/* Right Word */}\n                        <Link to={rightLinkTo}>\n                            <text\n                                x=\"300\"\n                                fill=\"white\"\n                                fontFamily=\"Courier\"\n                                fontSize=\"90px\"\n                                className={styles.svgButton}\n                            >\n                                {rightWord}\n                            </text>\n                        </Link>\n                    </g>\n                </svg>\n            </div>\n        </div>\n    );\n};\n\nexport default ModularHeaderLink;\n","import React from \"react\";\n\nconst QuantityControl = ({ quantity, stock, onDecrease, onIncrease }) => (\n    <div>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onDecrease();\n            }}\n\n        >\n            -\n        </button>\n        <span>   {quantity}   </span>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onIncrease();\n            }}\n        >\n            +\n        </button>\n    </div>\n);\n\nexport default QuantityControl;\n","// extracted by mini-css-extract-plugin\nexport var cart = \"styles-module--cart--d7a47\";\nexport var cartIcon = \"styles-module--cartIcon--8a034\";\nexport var cartTable = \"styles-module--cartTable--d19e3\";\nexport var cartToggleButton = \"styles-module--cartToggleButton--c057a\";\nexport var cartToggleContainer = \"styles-module--cartToggleContainer--edce5\";\nexport var category = \"styles-module--category--8436a\";\nexport var categoryHeader = \"styles-module--categoryHeader--16eb4\";\nexport var categorySection = \"styles-module--categorySection--f1108\";\nexport var closeButton = \"styles-module--closeButton--5a3f6\";\nexport var del = \"styles-module--del--281ce\";\nexport var emptyCartMessage = \"styles-module--emptyCartMessage--fe4f3\";\nexport var fullScreenImage = \"styles-module--fullScreenImage--10982\";\nexport var fullScreenModal = \"styles-module--fullScreenModal--07a3c\";\nexport var grandTotal = \"styles-module--grandTotal--7e4b2\";\nexport var item = \"styles-module--item--2b47c\";\nexport var itemBackground = \"styles-module--itemBackground--30ce9\";\nexport var itemImage = \"styles-module--itemImage--d83f7\";\nexport var itemList = \"styles-module--itemList--6f49f\";\nexport var modalContent = \"styles-module--modalContent--0a097\";\nexport var priceEach = \"styles-module--priceEach--04a90\";\nexport var quant = \"styles-module--quant--b5a04\";\nexport var removeButton = \"styles-module--removeButton--45abe\";\nexport var sectionHeader = \"styles-module--sectionHeader--6846b\";\nexport var toggleIcon = \"styles-module--toggleIcon--84634\";\nexport var tot = \"styles-module--tot--d3a80\";","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QuantityControl from \"../QuantityControl\";\nimport * as styles from \"../styles.module.css\";\nimport {\n    toggleItemInCart,\n    updateItemQuantity,\n    getMerchantMode,\n} from \"../../../state/merchantSlice\";\n\nconst Item = ({ item, cart, dispatch, handleItemClick }) => {\n\n    const merchantMode = useSelector(getMerchantMode);\n    const isInCart = (id) => cart.some((cartItem) => cartItem.id === id);\n    const quantity = isInCart(item.id) ? cart.find((cartItem) => cartItem.id === item.id).quantity : 1;\n\n    const handleToggle = (event) => {\n        event.stopPropagation(); // Prevent triggering the item click\n        dispatch(toggleItemInCart(item));\n    };\n\n    const handleQuantityChange = (quantity) => {\n        dispatch(updateItemQuantity({ id: item.id, quantity }));\n    };\n\n    return (\n        <div className={styles.item} onClick={() => handleItemClick(item)}>\n            <img src={item.image} alt={item.name} className={styles.itemImage} />\n            <h3>{item.name}</h3>\n            <p>{item.description}</p>\n            <p>${item.price}</p>\n            {merchantMode ? (\n                <div>\n                    <p># Remaining: {item.stock}</p>\n                    {isInCart(item.id) ? (\n                        <button onClick={handleToggle} className={styles.removeButton}>\n                            Remove from Cart\n                        </button>\n                    ) : (\n                        <button onClick={handleToggle} disabled={item.stock <= 0}>\n                            Add to Cart\n                        </button>\n                    )}\n                    {isInCart(item.id) && (\n                        <QuantityControl\n                            quantity={quantity}\n                            stock={item.stock}\n                            onDecrease={() => handleQuantityChange(Math.max(1, quantity - 1))}\n                            onIncrease={() => handleQuantityChange(Math.min(item.stock, quantity + 1))}\n                        />\n                    )}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\nimport * as styles from \"../styles.module.css\";\n\nconst Section = ({\n    section,\n    items,\n    category,\n    openSection,\n    setOpenSection,\n    handleItemClick,\n    cart,\n    dispatch,\n}) => {\n    const toggleSection = () => {\n        const newSection =\n            openSection?.category === category && openSection?.section === section\n                ? null\n                : { category, section };\n        setOpenSection(newSection);\n\n        // Scroll the section header into view\n        if (newSection) {\n            setTimeout(() => {\n                const sectionElement = document.getElementById(`section-${section}`);\n                if (sectionElement) {\n                    sectionElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n                }\n            }, 0);\n        }\n    };\n\n    return (\n        <div className={styles.section}>\n            {section && (\n                <h3\n                    id={`section-${section}`}\n                    className={styles.sectionHeader}\n                    onClick={toggleSection}\n                >\n                    {section}\n                </h3>\n            )}\n            {(openSection?.category === category && openSection?.section === section) || !section ? (\n                <div className={styles.itemList}>\n                    {items.map((item) => (\n                        <Item\n                            key={item.id}\n                            item={item}\n                            cart={cart}\n                            dispatch={dispatch}\n                            handleItemClick={handleItemClick}\n                        />\n                    ))}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Section;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport * as styles from \"../styles.module.css\";\n\nconst Category = ({\n    category,\n    categorySections,\n    openCategory,\n    setOpenCategory,\n    openSection,\n    setOpenSection,\n    handleItemClick,\n    cart,\n    dispatch,\n}) => {\n    const toggleCategory = () => {\n        const newCategory = openCategory === category ? null : category;\n        setOpenCategory(newCategory);\n\n        // Collapse all sections if the category is closed\n        if (!newCategory) {\n            setOpenSection(null);\n        }\n\n        // Scroll the category header into view\n        if (newCategory) {\n            setTimeout(() => {\n                const categoryElement = document.getElementById(`category-${category}`);\n                if (categoryElement) {\n                    categoryElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n                }\n            }, 0);\n        }\n    };\n\n    return (\n        <div className={styles.category}>\n            <h2\n                id={`category-${category}`}\n                className={styles.categoryHeader}\n                onClick={toggleCategory}\n            >\n                {category}\n            </h2>\n            {openCategory === category && (\n                <div className={styles.sectionList}>\n                    {Array.from(categorySections.entries()).map(([section, items]) => (\n                        <Section\n                            key={section}\n                            section={section}\n                            items={items}\n                            category={category}\n                            openSection={openSection}\n                            setOpenSection={setOpenSection}\n                            handleItemClick={handleItemClick}\n                            cart={cart}\n                            dispatch={dispatch}\n                        />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Category;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleItemInCart, updateItemQuantity, selectCart } from \"../../../state/merchantSlice\";\nimport { navigate } from \"gatsby\";\nimport Category from \"./Category\";\nimport * as styles from \"../styles.module.css\";\n\nconst ItemList = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n    const storeItems = useSelector((state) => state.merchantShop.storeItems);\n\n    // Group items by category and section\n    const groupedItems = new Map();\n    storeItems.forEach((item) => {\n        if (!groupedItems.has(item.category)) {\n            groupedItems.set(item.category, new Map());\n        }\n        const categorySections = groupedItems.get(item.category);\n        if (!categorySections.has(item.section)) {\n            categorySections.set(item.section, []);\n        }\n        categorySections.get(item.section).push(item);\n    });\n\n    const [openCategory, setOpenCategory] = useState(null);\n    const [openSection, setOpenSection] = useState(null);\n\n    const handleItemClick = (item) => {\n        navigate(`/shop?item=${item.id}`);\n    };\n\n    return (\n        <div className={styles.itemListContainer}>\n            {Array.from(groupedItems.entries()).map(([category, categorySections]) => (\n                <Category\n                    key={category}\n                    category={category}\n                    categorySections={categorySections}\n                    openCategory={openCategory}\n                    setOpenCategory={setOpenCategory}\n                    openSection={openSection}\n                    setOpenSection={setOpenSection}\n                    handleItemClick={handleItemClick}\n                    cart={cart}\n                    dispatch={dispatch}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default ItemList;\n","import { useEffect, useRef } from \"react\";\n\nconst usePaypalButtons = ({ cart, paypalRef, onApprove, createOrder }) => {\n    const paypalRenderedRef = useRef(false);\n\n    useEffect(() => {\n        if (process.env.NODE_ENV === 'development') console.log(\"\\nEnvironment Variables:\", {\n            PAYPAL_CLIENT_ID: process.env.PAYPAL_CLIENT_ID ? \"***\" : undefined,\n            SERVER_IP: process.env.SERVER_IP,\n            PORT: process.env.PORT,\n        });\n\n        if (paypalRenderedRef.current) {\n            console.log(\"PayPal buttons already rendered. Skipping initialization.\");\n            return;\n        }\n\n        const script = document.createElement(\"script\");\n\n        // Check if the user is on a mobile device\n        const isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\n        let paypalEnv = process.env.NODE_ENV === 'production' ? 'https://www.paypal.com' : 'https://www.sandbox.paypal.com';\n        let buyerCountryParam = process.env.NODE_ENV !== 'production' ? '&buyer-country=US' : '';\n\n        // Set script.src with shared parameters\n        script.src = `${paypalEnv}/sdk/js?client-id=${encodeURIComponent(process.env.PAYPAL_CLIENT_ID)}${buyerCountryParam}&currency=USD&components=buttons&enable-funding=paypal,venmo,card&commit=true&intent=capture${isMobile ? '&integration-date=2021-02-01' : ''}`;\n\n        script.async = true;\n\n        script.onload = () => {\n            if (window.paypal && paypalRef.current) {\n                paypalRenderedRef.current = true;\n                window.paypal.Buttons({\n                    style: {\n                        shape: \"pill\",\n                        layout: \"vertical\",\n                        color: \"blue\",\n                        label: \"pay\",\n                    },\n                    createOrder,\n                    onApprove,\n                }).render(paypalRef.current);\n            } else {\n                console.error(\"PayPal SDK not loaded properly.\");\n            }\n        };\n\n        document.body.appendChild(script);\n\n        return () => {\n            if (paypalRenderedRef.current) {\n                console.log(\"Cleaning up PayPal buttons.\");\n                paypalRenderedRef.current = false;\n            }\n\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, [cart, paypalRef, createOrder, onApprove]);\n};\n\nexport default usePaypalButtons;\n","import React, { useRef } from \"react\";\nimport { clearCart } from \"../../../state/merchantSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as styles from \"./index.module.css\";\nimport usePaypalButtons from \"./usePaypalButtons\";\n\nconst PaypalButton = ({ cart }) => {\n    const dispatch = useDispatch();\n    const paypalRef = useRef(null);\n\n    const serverIP = process.env.SERVER_IP;\n    const port = process.env.PORT;\n\n    const merchantEmail = useSelector((state) => state.account.accountInfo.email);\n\n    const createOrder = async (data, actions) => {\n        try {\n            const totalAmount = cart.reduce(\n                (sum, item) => sum + parseFloat(item.price) * item.quantity,\n                0\n            ).toFixed(2);\n\n            const response = await fetch(`https://${serverIP}:${port}/api/orders`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Origin\": window.location.origin, // Include Origin header\n                },\n                body: JSON.stringify({ cart }),\n            });\n\n            const orderData = await response.json();\n            console.log(\"createOrder Response:\", orderData);\n\n            if (orderData.id) {\n                return orderData.id;\n            }\n            throw new Error(\"Failed to create order\");\n        } catch (error) {\n            console.error(\"createOrder Error:\", error);\n            throw new Error(\"Could not initiate PayPal Checkout\");\n        }\n    };\n\n    const onApprove = async (data, actions) => {\n        try {\n            const response = await fetch(\n                `https://${serverIP}:${port}/api/orders/${data.orderID}/capture`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Origin\": window.location.origin, // Include Origin header\n                    },\n                    body: JSON.stringify({ cart, merchantEmail }),\n                }\n            );\n\n            const orderData = await response.json();\n            console.log(\"onApprove Response:\", orderData);\n\n            if (orderData?.purchase_units?.[0]?.payments?.captures?.[0]) {\n                const transaction =\n                    orderData?.purchase_units?.[0]?.payments?.captures?.[0];\n                console.log(\"Transaction completed:\", transaction);\n\n                dispatch(clearCart());\n            } else {\n                throw new Error(\"Capture failed\");\n            }\n        } catch (error) {\n            console.error(\"onApprove Error:\", error);\n            alert(\"Sorry, your transaction could not be processed.\");\n        }\n    };\n\n    // Initialize PayPal buttons\n    usePaypalButtons({ cart, paypalRef, createOrder, onApprove });\n\n    return (\n        <div ref={paypalRef}></div>\n    );\n};\n\nexport default PaypalButton;\n","import * as styles from \"./styles.module.css\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectCart,\n    updateItemQuantity,\n    toggleItemInCart,\n    getMerchantMode,\n} from '../../state/merchantSlice';\nimport PayPalButtons from \"./checkout\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ViewCart = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n    const merchantMode = useSelector(getMerchantMode);\n\n    const handleQuantityChange = (item, quantity) => {\n        const newQuantity = Math.max(1, Math.min(quantity, item.stock)); // Limit between 1 and stock\n        dispatch(updateItemQuantity({ id: item.id, quantity: newQuantity }));\n    };\n\n    const handleRemoveItem = (item) => {\n        dispatch(toggleItemInCart(item)); // Use toggle to remove item\n    };\n\n    if (merchantMode && (!cart || cart.length === 0)) {\n        return (\n            <div className={styles.emptyCartMessage}>\n                <p>Your cart is empty</p>\n            </div>\n        );\n    }\n\n    if (!merchantMode) return null\n\n    return (\n        <div className={styles.cart}>\n            <br />\n            <table className={styles.cartTable}>\n                <thead>\n                    <tr>\n                        <th>Item</th>\n                        <th className={styles.quant}>Quantity</th>\n                        <th className={styles.tot}>Total</th>\n                        <th className={styles.del}>X</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cart.map((item, index) => {\n                        const price = Number(item.price) || 0;\n                        const quantity = Number(item.quantity) || 0;\n                        const total = price * quantity;\n\n                        return (\n                            <tr key={index}>\n                                <td className={otherstyles.center}>\n                                    {item.name || \"Unnamed Item\"}<br />\n                                    <span className={styles.priceEach}>${price.toFixed(2)}</span>\n                                </td>\n                                <td>\n                                    <QuantityControl\n                                        quantity={quantity}\n                                        stock={item.stock}\n                                        onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                        onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                        />\n                                </td>\n                                <td className={styles.tot}>${total.toFixed(2)}</td>\n                                <td>\n                                    <button\n                                        onClick={() => handleRemoveItem(item)}\n                                        className={styles.removeButton}\n                                    >\n                                        X\n                                    </button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n            <h3 className={styles.grandTotal}>\n                Grand Total: $\n                {cart.reduce(\n                    (total, item) =>\n                        total + (Number(item.price) || 0) * (Number(item.quantity) || 0),\n                    0\n                ).toFixed(2)}\n            </h3>\n\n            <PayPalButtons cart={cart} />\n        </div>\n    );\n};\n\nexport default ViewCart;\n","import React, { useEffect } from \"react\";\nimport QuantityControl from \"../QuantityControl\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as styles from \"./styles.module.css\";\nimport * as otherstyles from \"../styles.module.css\";\nimport {\n    toggleItemInCart,\n    updateItemQuantity,\n    selectCart,\n    getMerchantMode,\n} from \"../../../state/merchantSlice\";\n\nconst ItemModal = ({ item, onClose }) => {\n\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n    const merchantMode = useSelector(getMerchantMode);\n    const isInCart = (id) => cart.some((cartItem) => cartItem.id === id);\n    const quantity = isInCart(item.id) ? cart.find((cartItem) => cartItem.id === item.id).quantity : 1;\n\n    const handleToggle = (event) => {\n        event.stopPropagation(); // Prevent triggering the item click\n        dispatch(toggleItemInCart(item));\n    };\n\n    const handleQuantityChange = (quantity) => {\n        dispatch(updateItemQuantity({ id: item.id, quantity }));\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === \"Escape\") {\n                onClose();\n            }\n        };\n\n        document.addEventListener(\"keydown\", handleKeyDown);\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, [onClose]);\n\n    return (\n        <div className={styles.modalOverlay} onClick={onClose}>\n            <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\n                <button className={styles.closeButton} onClick={onClose}>✕</button>\n                <h2>{item.name}</h2>\n                <img src={item.image} alt={item.name} className={styles.modalImage} />\n                <p>{item.description}</p>\n                <p>${item.price}</p>\n                {merchantMode ? (\n                    <div>\n                        <p># Remaining: {item.stock}</p>\n                        {isInCart(item.id) ? (\n                            <button onClick={handleToggle} className={otherstyles.removeButton}>\n                                Remove from Cart\n                            </button>\n                        ) : (\n                            <button onClick={handleToggle} disabled={item.stock <= 0}>\n                                Add to Cart\n                            </button>\n                        )}\n                        {isInCart(item.id) && (\n                            <QuantityControl\n                                quantity={quantity}\n                                stock={item.stock}\n                                onDecrease={() => handleQuantityChange(Math.max(1, quantity - 1))}\n                                onIncrease={() => handleQuantityChange(Math.min(item.stock, quantity + 1))}\n                            />\n                        )}\n                    </div>\n                ) : null}\n            </div>\n        </div>\n    );\n};\n\nexport default ItemModal;\n","// extracted by mini-css-extract-plugin\nexport var closeButton = \"styles-module--closeButton--f0cbb\";\nexport var modalContent = \"styles-module--modalContent--8b217\";\nexport var modalImage = \"styles-module--modalImage--9c189\";\nexport var modalOverlay = \"styles-module--modalOverlay--c4284\";","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StoreItems from './storeItems';\nimport ShoppingCart from './cart';\nimport Footer from '../footer';\nimport ModularHeaderLink from \"../links/modularHeaderLink\";\nimport { navigate } from \"gatsby\";\nimport ItemModal from \"./storeItems/ItemModal\";\nimport {\n    toggleCartView,\n    selectCartVisibility,\n    updateStoreItems,\n    cleanCart,\n    selectCart,\n    setMerchantMode,\n} from '../../state/merchantSlice';\nimport * as styles from \"./styles.module.css\";\nimport Loading from \"../loading\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport { useMenu } from \"../../spreadsheet/useSheet\";\n\nconst Merchant = ({\n    merchantMode = true,\n    merchantSheet = `products`,\n}) => {\n    const dispatch = useDispatch();\n    const isCartVisible = useSelector(selectCartVisibility);\n    const cart = useSelector(selectCart);\n    const merchantID = useSelector((state) => state.account.sheetID)\n    const accountInfo = useSelector((state) => state.account.accountInfo);\n\n    const { loading, error, data: menuData } = useMenu({\n        spreadsheetId: merchantID,\n        sheetName: merchantSheet,\n    });\n\n    useEffect(() => {\n        if (!loading && !error && menuData) {\n            dispatch(updateStoreItems(menuData));\n            dispatch(cleanCart()); // Validate cart after store items update\n        }\n    }, [loading, error, menuData, dispatch]);\n\n    useEffect(() => {\n        dispatch(setMerchantMode(merchantMode));\n    }, [merchantMode, dispatch]);\n\n    const handleToggleCart = () => {\n        dispatch(toggleCartView());\n    };\n\n    const queryParams = new URLSearchParams(typeof window !== \"undefined\" ? window.location.search : \"\");\n    const selectedItemID = queryParams.get(\"item\");\n\n    const storeItems = useSelector((state) => state.merchantShop.storeItems);\n    const selectedItem = storeItems.find((item) => item.id === selectedItemID);\n\n    const closeModal = () => {\n        navigate(\"/shop\"); // Reset URL to close modal\n    };\n\n    if (loading) return <Loading />;\n    if (error) return <p>Error loading store items: {error}</p>;\n\n    // Only render the cart button and toggle if there are items in the cart and if in merchantMode\n    const showCartButton = cart && cart.length > 0 && merchantMode;\n\n    return (\n        <div>\n            <div className={otherstyles.container}>\n                {\n                    merchantMode ? (\n                        <ModularHeaderLink\n                            leftWord={accountInfo.name}\n                            // leftLinkTo=\".\"\n                            rightWord={accountInfo.merchTitle}\n                            cursorColor=\"#39FF14\"\n                        />\n                    ) : (\n                        <ModularHeaderLink\n                            rightWord=\"eats\"\n                            cursorColor=\"#39FF14\"\n                        />\n                    )\n                }\n                {showCartButton && (\n                    <button className={styles.cartToggleButton} onClick={handleToggleCart}>\n                        {isCartVisible ? (\n                            <div className={styles.cartToggleContainer}>\n                                <span>Hide</span>\n                                <span className={styles.cartIcon} role=\"img\" aria-label=\"cart\">{'\\u{1F6D2}'}</span>\n                            </div>\n                        ) : (\n                            <div className={styles.cartToggleContainer}>\n                                <span>Your Cart</span>\n                                <span className={styles.cartIcon} role=\"img\" aria-label=\"cart\">{'\\u{1F6D2}'}</span>\n                            </div>\n                        )}\n                    </button>\n                )}\n                {isCartVisible && <ShoppingCart />}\n            </div>\n            <div className={styles.itemListContainer}>\n                <StoreItems />\n            </div>\n            <div className={otherstyles.container}>\n                <Footer />\n            </div>\n            {selectedItem && <ItemModal item={selectedItem} onClose={closeModal} />}\n        </div>\n    );\n};\n\nexport default Merchant;\n"],"names":["svgButton","_ref","leftWord","leftLinkTo","rightWord","rightLinkTo","cursorColor","blinkSpeed","setBlinkSpeed","useState","getRandomBlinkSpeed","accountInfo","useSelector","state","account","Math","random","useEffect","interval","setInterval","clearInterval","React","style","display","justifyContent","className","xmlns","viewBox","width","height","transform","textAnchor","Link","to","x","fill","fontFamily","fontSize","styles","fontWeight","animationDuration","quantity","stock","onDecrease","onIncrease","onClick","e","stopPropagation","cartIcon","cartTable","cartToggleButton","cartToggleContainer","categoryHeader","del","emptyCartMessage","grandTotal","itemImage","itemList","priceEach","quant","removeButton","sectionHeader","tot","item","cart","dispatch","handleItemClick","merchantMode","getMerchantMode","isInCart","id","some","cartItem","find","handleToggle","event","toggleItemInCart","handleQuantityChange","updateItemQuantity","src","image","alt","name","description","price","disabled","QuantityControl","max","min","section","items","category","openSection","setOpenSection","toggleSection","newSection","setTimeout","sectionElement","document","getElementById","scrollIntoView","behavior","block","map","Item","key","categorySections","openCategory","setOpenCategory","toggleCategory","newCategory","categoryElement","Array","from","entries","_ref2","Section","ItemList","useDispatch","selectCart","storeItems","merchantShop","groupedItems","Map","forEach","has","set","get","push","navigate","Category","paypalRef","onApprove","createOrder","paypalRenderedRef","useRef","current","console","log","script","createElement","isMobile","test","navigator","userAgent","paypalEnv","encodeURIComponent","process","PAYPAL_CLIENT_ID","async","onload","window","paypal","Buttons","shape","layout","color","label","render","error","body","appendChild","contains","removeChild","serverIP","SERVER_IP","port","PORT","merchantEmail","email","usePaypalButtons","data","actions","reduce","sum","parseFloat","toFixed","response","fetch","method","headers","location","origin","JSON","stringify","orderData","json","Error","_orderData$purchase_u","_orderData$purchase_u2","_orderData$purchase_u3","_orderData$purchase_u4","orderID","purchase_units","payments","captures","_orderData$purchase_u5","_orderData$purchase_u6","_orderData$purchase_u7","_orderData$purchase_u8","transaction","clearCart","alert","ref","ViewCart","newQuantity","length","index","Number","total","otherstyles","handleRemoveItem","PayPalButtons","onClose","handleKeyDown","addEventListener","removeEventListener","merchantSheet","isCartVisible","selectCartVisibility","merchantID","sheetID","loading","menuData","useMenu","spreadsheetId","sheetName","updateStoreItems","cleanCart","setMerchantMode","selectedItemID","URLSearchParams","search","selectedItem","Loading","showCartButton","ModularHeaderLink","merchTitle","handleToggleCart","toggleCartView","role","ShoppingCart","StoreItems","Footer","ItemModal","closeModal"],"sourceRoot":""}